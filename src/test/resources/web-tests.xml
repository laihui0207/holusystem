<!DOCTYPE project [
    <!ENTITY config SYSTEM "./config.xmlf">
    <!ENTITY login SYSTEM "./login.xmlf">
]>
<project basedir="." default="run-all-tests">
    <taskdef resource="webtestTaskdefs.properties" />
    <!-- for propertyregex: allows to build a message string with parameter replacement: "User {0} successfully created" -->
    <!-- usage example -->
    <!--
        <propertyregex property="updated.byAdmin"
            input="${user.updated.byAdmin}"
            regexp="\{0\}"
            replace="${it_user_signup.fullname}"
            global="false" />
        <verifytext description="verify success message" text="${updated.byAdmin}"/>
     -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

    <!-- Use i18n bundle, 2nd one listed is the default -->
    <property file="../../../target/classes/ApplicationResources_${user.language}.properties"/>
    <property file="../../../target/classes/ApplicationResources.properties"/>
    <property file="../../../target/classes/displaytag_${user.language}.properties"/>
    <property file="../../../target/classes/displaytag.properties"/>

    <!-- runs all targets -->
    <target name="run-all-tests"
        depends="Login,Logout,PasswordHint,Signup,UserTests,StaticPages,WebServices,DWR,FileUpload,ComponentTests,ComponentStyleTests,NoteTests,DocumentationTests,DocTypeTests,MessageTests,ReplyTests,PostBarTests,PostTests,PostSubjectTests,UserGroupTests,ProjectTests,CompanyTests,NewsTypeTests,NewsTests"
        description="Call and executes all test cases (targets)"/>

    <!-- runs user-related tests -->
    <target name="UserTests" depends="EditUser,SearchUser,SaveUser,AddUser,ActiveUsers"
        description="Call and executes all user test cases (targets)">
        <echo>Successfully ran all User UI tests!</echo>
    </target>

    <!-- Login to the application -->
    <target name="Login" description="Runs login test and verifies Home's Title">
        <webtest name="login">
            &config;
            <steps>
                &login;
            </steps>
        </webtest>
    </target>

    <!-- Logout of the application -->
    <target name="Logout" description="Runs logout test and verifies Login's Title">
        <webtest name="logout">
            &config;
            <steps>
                &login;
                <invoke description="get Logout Page" url="/logout"/>
                <verifytitle description="we should see the login title" text=".*${login.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Retrieve Password Hint -->
    <target name="PasswordHint" description="Gets the user's password hint">
        <webtest name="passwordHint">
            &config;
            <steps>
                <invoke description="get Login Page" url="/"/>
                <verifytitle description="we should see the login title" text=".*${login.title}.*" regex="true"/>
                <invoke description="click password hint link" url="/passwordHint?username=admin"/>
                <verifytitle description="show login title again" text=".*${login.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <target name="StaticPages" description="Ensures that StaticFilter is working">
        <webtest name="staticPages">
            &config;
            <steps>
                &login;
                <invoke description="go to static HTML page" url="/scripts/dojo/test.html"/>
                <verifytitle description="we should see static title" text="Static HTML Page" regex="true"/>
                <verifytext description="verify message" text="Static content!"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit user screen displays without errors -->
    <target name="EditUser"  description="Tests selecting the 'Edit Profile' forward">
        <webtest name="editUser">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Profile link" url="/userform"/>
                <verifytitle description="we should see the user profile title"
                    text=".*${userProfile.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the user list screen displays without errors -->
    <target name="SearchUser" description="Tests search for and displaying all users">
        <webtest name="searchUser">
            &config;
            <steps>
                &login;
                <invoke description="click View Users link" url="/admin/users"/>
                <verifytitle description="we should see the user list title"
                    text=".*${userList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="matt_raible"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifyXPath
                     description="Count the number of users found"
                     xpath="count(//table[@id='users']/tbody/tr)"
                     text="1"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a user and then save -->
    <target name="SaveUser" description="Tests editing and saving a user">
        <webtest name="saveUser">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Profile link" url="/userform"/>
                <verifytitle description="we should see the user profile title"
                    text=".*${userProfile.title}.*" regex="true"/>
                <setinputfield description="set address" name="address.address" value="2255 Lane Avenue"/>
                <setinputfield description="set zipcode" name="address.postalCode" value="59826"/>
                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="display Home if save OK"
                     text=".*${home.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new user after logging in -->
    <target name="AddUser" description="Adds a new user profile">
        <webtest name="addUser">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/userform?method=Add&amp;from=list"/>
                <verifytitle description="view the user profile title" text=".*${userProfile.title}.*" regex="true"/>

                <setinputfield description="set username" name="username" value="newuser"/>
<!--                 <setinputfield description="set password" name="password" value="test"/> -->
<!--                 <setinputfield description="set confirmPassword" name="confirmPassword" value="test"/> -->
                <setinputfield description="set firstName" name="firstName" value="Test"/>
                <setinputfield description="set lastName" name="lastName" value="Name"/>
                <setinputfield description="set city" name="address.city" value="Denver"/>
                <setinputfield description="select province" name="address.province" value="CO"/>
                <setselectfield description="select country" name="address.country" value="US"/>
                <setinputfield description="set postalCode" name="address.postalCode" value="80210"/>
                <setinputfield description="set email" name="email" value="newuser@raibledesigns.com"/>
                <setinputfield description="set website" name="website" value="http://raibledesigns.com"/>
                <setinputfield description="set passwordHint" name="passwordHint" value="test"/>
                <setselectfield description="select roles" name="userRoles" value="ROLE_USER"/>
                <clickbutton label="${button.save}" description="Click button 'Save'"/>

                <verifytitle description="view user list screen" text=".*${userList.title}.*" regex="true"/>
                <verifytext description="verify success message" regex="true"
                    text='&lt;div class="alert alert-success.*&gt;.*Test Name.*&lt;/div&gt;'/>

                <!-- Delete user -->
                <clickLink description="Click edit user link" label="newuser"/>
                <prepareDialogResponse description="Confirm delete" dialogType="confirm" response="true"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytext description="verify success message" regex="true"
                    text='&lt;div class="alert alert-success.*&gt;.*Test Name.*&lt;/div&gt;'/>
                <verifytitle description="display user list" text=".*${userList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Sign up a new user (no login) -->
    <target name="Signup" description="Signup a new user">
        <webtest name="signup">
            &config;
            <steps>
                <invoke description="click signup link" url="/signup"/>
                <verifytitle description="view signup title" text=".*${signup.title}.*" regex="true"/>

                <setinputfield description="set username" name="username" value="signup-user"/>
                <setinputfield description="set password" name="password" value="test"/>
<!--                 <setinputfield description="set confirmPassword" name="confirmPassword" value="test"/> -->
                <setinputfield description="set firstName" name="firstName" value="Test"/>
                <setinputfield description="set lastName" name="lastName" value="Name"/>
                <setinputfield description="set city" name="address.city" value="Denver"/>
                <setinputfield description="set state" name="address.province" value="CO"/>
                <setselectfield description="select country" name="address.country" value="US"/>
                <setinputfield description="set postalCode" name="address.postalCode" value="80210"/>
                <setinputfield description="set email" name="email" value="signup-user@raibledesigns.com"/>
                <setinputfield description="set website" name="website" value="http://raibledesigns.com"/>
                <setinputfield description="set passwordHint" name="passwordHint" value="test"/>
                <clickbutton label="${button.register}" description="Click button 'Signup'"/>

                <verifytitle description="view main menu" text=".*${home.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${user.registered}"/>
            </steps>
        </webtest>
    </target>

    <!-- View Active Users -->
    <target name="ActiveUsers" description="View Active Users List">
        <webtest name="activeUsers">
            &config;
            <steps>
                &login;
                <invoke description="get activeUsers URL" url="/admin/activeUsers"/>
                <verifytitle description="we should see the activeUsers title"
                    text=".*${activeUsers.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- File Upload -->
    <target name="FileUpload" description="Tests uploading a file">
        <webtest name="fileUpload">
            &config;
            <steps>
                &login;
                <invoke description="click Upload a File link" url="/fileupload"/>
                <verifytitle description="we should see file upload form" text=".*${upload.title}.*" regex="true"/>
                <setinputfield description="set name" name="name" value="Canoo Test File"/>
                <setFileField description="set file" name="file" fileName="web-tests.xml"/>
                <clickbutton label="${button.upload}" description="Click Upload"/>
                <verifytitle description="show file data if upload OK" text=".*${display.title}.*" regex="true"/>
                <verifytext description="verify original filename displayed on page" text="web-tests.xml"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify CXF is configured properly. -->
    <target name="WebServices" description="Verifies CXF Services are listed">
        <webtest name="webservices">
            &config;
            <steps>
                &login;
                <invoke url="/services/"/>
                <verifytitle description="should see services listing" text="CXF - Service list.*" regex="true"/>
                <verifytext description="verify page renders" text="Available SOAP services"/>
                <verifytext description="verify UserManager exist" text="UserService"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify DWR is configured properly. -->
    <target name="DWR" description="Verifies DWR Index Page">
        <webtest name="dwr">
            &config;
            <steps>
                &login;
                <invoke url="/dwr/"/>
                <verifytitle description="should DWR Test Index" text="DWR Test Index.*" regex="true"/>
                <clicklink description="click on UserManager link" label="UserManager"/>
                <verifytext description="verify next page comes up" text="Methods For: UserManager"/>
            </steps>
        </webtest>
    </target>
    <!--News-START-->
    <!-- runs news-related tests -->
    <target name="NewsTests"
            depends="SearchNewss,EditNews,SaveNews,AddNews,DeleteNews"
            description="Call and executes all news test cases (targets)">
        <echo>Successfully ran all News UI tests!</echo>
    </target>

    <!-- Verify the newss list screen displays without errors -->
    <target name="SearchNewss" description="Tests search for and displaying all newss">
        <webtest name="searchNewss">
            &config;
            <steps>
                &login;
                <invoke description="click View News link" url="/newss"/>
                <verifytitle description="we should see the newsList title"
                    text=".*${newsList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the newsList title"
                    text=".*${newsList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit news screen displays without errors -->
    <target name="EditNews" description="Tests editing an existing News's information">
        <webtest name="editNews">
            &config;
            <steps>
                &login;
                <invoke description="View News List" url="/newss"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the newsDetail title"
                    text=".*${newsDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a news and then save -->
    <target name="SaveNews" description="Tests editing and saving a news">
        <webtest name="saveNews">
            &config;
            <steps>
                &login;
                <invoke description="click Edit News link" url="/newsform?id=-1"/>
                <verifytitle description="we should see the newsDetail title"
                    text=".*${newsDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${newsDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${news.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new News -->
    <target name="AddNews" description="Adds a new News">
        <webtest name="addNews">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/newsform"/>
                <verifytitle description="we should see the newsDetail title"
                    text=".*${newsDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="News List appears if save successful"
                    text=".*${newsList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${news.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing news -->
    <target name="DeleteNews" description="Deletes existing News">
        <webtest name="deleteNews">
            &config;
            <steps>
                &login;
                <invoke description="click Edit News link" url="/newsform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display News List" text=".*${newsList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${news.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--News-END-->
    <!--NewsType-START-->
    <!-- runs newsType-related tests -->
    <target name="NewsTypeTests"
            depends="SearchNewsTypes,EditNewsType,SaveNewsType,AddNewsType,DeleteNewsType"
            description="Call and executes all newsType test cases (targets)">
        <echo>Successfully ran all NewsType UI tests!</echo>
    </target>

    <!-- Verify the newsTypes list screen displays without errors -->
    <target name="SearchNewsTypes" description="Tests search for and displaying all newsTypes">
        <webtest name="searchNewsTypes">
            &config;
            <steps>
                &login;
                <invoke description="click View NewsType link" url="/newsTypes"/>
                <verifytitle description="we should see the newsTypeList title"
                    text=".*${newsTypeList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the newsTypeList title"
                    text=".*${newsTypeList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit newsType screen displays without errors -->
    <target name="EditNewsType" description="Tests editing an existing NewsType's information">
        <webtest name="editNewsType">
            &config;
            <steps>
                &login;
                <invoke description="View NewsType List" url="/newsTypes"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the newsTypeDetail title"
                    text=".*${newsTypeDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a newsType and then save -->
    <target name="SaveNewsType" description="Tests editing and saving a newsType">
        <webtest name="saveNewsType">
            &config;
            <steps>
                &login;
                <invoke description="click Edit NewsType link" url="/newsTypeform?id=-1"/>
                <verifytitle description="we should see the newsTypeDetail title"
                    text=".*${newsTypeDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${newsTypeDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${newsType.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new NewsType -->
    <target name="AddNewsType" description="Adds a new NewsType">
        <webtest name="addNewsType">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/newsTypeform"/>
                <verifytitle description="we should see the newsTypeDetail title"
                    text=".*${newsTypeDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="NewsType List appears if save successful"
                    text=".*${newsTypeList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${newsType.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing newsType -->
    <target name="DeleteNewsType" description="Deletes existing NewsType">
        <webtest name="deleteNewsType">
            &config;
            <steps>
                &login;
                <invoke description="click Edit NewsType link" url="/newsTypeform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display NewsType List" text=".*${newsTypeList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${newsType.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--NewsType-END-->
    <!--Company-START-->
    <!-- runs company-related tests -->
    <target name="CompanyTests"
            depends="SearchCompanies,EditCompany,SaveCompany,AddCompany,DeleteCompany"
            description="Call and executes all company test cases (targets)">
        <echo>Successfully ran all Company UI tests!</echo>
    </target>

    <!-- Verify the companies list screen displays without errors -->
    <target name="SearchCompanies" description="Tests search for and displaying all companies">
        <webtest name="searchCompanies">
            &config;
            <steps>
                &login;
                <invoke description="click View Company link" url="/companies"/>
                <verifytitle description="we should see the companyList title"
                    text=".*${companyList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the companyList title"
                    text=".*${companyList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit company screen displays without errors -->
    <target name="EditCompany" description="Tests editing an existing Company's information">
        <webtest name="editCompany">
            &config;
            <steps>
                &login;
                <invoke description="View Company List" url="/companies"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the companyDetail title"
                    text=".*${companyDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a company and then save -->
    <target name="SaveCompany" description="Tests editing and saving a company">
        <webtest name="saveCompany">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Company link" url="/companyform?id=-1"/>
                <verifytitle description="we should see the companyDetail title"
                    text=".*${companyDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${companyDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${company.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Company -->
    <target name="AddCompany" description="Adds a new Company">
        <webtest name="addCompany">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/companyform"/>
                <verifytitle description="we should see the companyDetail title"
                    text=".*${companyDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Company List appears if save successful"
                    text=".*${companyList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${company.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing company -->
    <target name="DeleteCompany" description="Deletes existing Company">
        <webtest name="deleteCompany">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Company link" url="/companyform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Company List" text=".*${companyList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${company.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Company-END-->
    <!--Project-START-->
    <!-- runs project-related tests -->
    <target name="ProjectTests"
            depends="SearchProjects,EditProject,SaveProject,AddProject,DeleteProject"
            description="Call and executes all project test cases (targets)">
        <echo>Successfully ran all Project UI tests!</echo>
    </target>

    <!-- Verify the projects list screen displays without errors -->
    <target name="SearchProjects" description="Tests search for and displaying all projects">
        <webtest name="searchProjects">
            &config;
            <steps>
                &login;
                <invoke description="click View Project link" url="/projects"/>
                <verifytitle description="we should see the projectList title"
                    text=".*${projectList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the projectList title"
                    text=".*${projectList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit project screen displays without errors -->
    <target name="EditProject" description="Tests editing an existing Project's information">
        <webtest name="editProject">
            &config;
            <steps>
                &login;
                <invoke description="View Project List" url="/projects"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the projectDetail title"
                    text=".*${projectDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a project and then save -->
    <target name="SaveProject" description="Tests editing and saving a project">
        <webtest name="saveProject">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Project link" url="/projectform?id=-1"/>
                <verifytitle description="we should see the projectDetail title"
                    text=".*${projectDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${projectDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${project.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Project -->
    <target name="AddProject" description="Adds a new Project">
        <webtest name="addProject">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/projectform"/>
                <verifytitle description="we should see the projectDetail title"
                    text=".*${projectDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Project List appears if save successful"
                    text=".*${projectList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${project.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing project -->
    <target name="DeleteProject" description="Deletes existing Project">
        <webtest name="deleteProject">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Project link" url="/projectform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Project List" text=".*${projectList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${project.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Project-END-->
    <!--UserGroup-START-->
    <!-- runs userGroup-related tests -->
    <target name="UserGroupTests"
            depends="SearchUserGroups,EditUserGroup,SaveUserGroup,AddUserGroup,DeleteUserGroup"
            description="Call and executes all userGroup test cases (targets)">
        <echo>Successfully ran all UserGroup UI tests!</echo>
    </target>

    <!-- Verify the userGroups list screen displays without errors -->
    <target name="SearchUserGroups" description="Tests search for and displaying all userGroups">
        <webtest name="searchUserGroups">
            &config;
            <steps>
                &login;
                <invoke description="click View UserGroup link" url="/userGroups"/>
                <verifytitle description="we should see the userGroupList title"
                    text=".*${userGroupList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the userGroupList title"
                    text=".*${userGroupList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit userGroup screen displays without errors -->
    <target name="EditUserGroup" description="Tests editing an existing UserGroup's information">
        <webtest name="editUserGroup">
            &config;
            <steps>
                &login;
                <invoke description="View UserGroup List" url="/userGroups"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the userGroupDetail title"
                    text=".*${userGroupDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a userGroup and then save -->
    <target name="SaveUserGroup" description="Tests editing and saving a userGroup">
        <webtest name="saveUserGroup">
            &config;
            <steps>
                &login;
                <invoke description="click Edit UserGroup link" url="/userGroupform?id=-1"/>
                <verifytitle description="we should see the userGroupDetail title"
                    text=".*${userGroupDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${userGroupDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${userGroup.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new UserGroup -->
    <target name="AddUserGroup" description="Adds a new UserGroup">
        <webtest name="addUserGroup">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/userGroupform"/>
                <verifytitle description="we should see the userGroupDetail title"
                    text=".*${userGroupDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="UserGroup List appears if save successful"
                    text=".*${userGroupList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${userGroup.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing userGroup -->
    <target name="DeleteUserGroup" description="Deletes existing UserGroup">
        <webtest name="deleteUserGroup">
            &config;
            <steps>
                &login;
                <invoke description="click Edit UserGroup link" url="/userGroupform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display UserGroup List" text=".*${userGroupList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${userGroup.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--UserGroup-END-->
    <!--PostSubject-START-->
    <!-- runs postSubject-related tests -->
    <target name="PostSubjectTests"
            depends="SearchPostSubjects,EditPostSubject,SavePostSubject,AddPostSubject,DeletePostSubject"
            description="Call and executes all postSubject test cases (targets)">
        <echo>Successfully ran all PostSubject UI tests!</echo>
    </target>

    <!-- Verify the postSubjects list screen displays without errors -->
    <target name="SearchPostSubjects" description="Tests search for and displaying all postSubjects">
        <webtest name="searchPostSubjects">
            &config;
            <steps>
                &login;
                <invoke description="click View PostSubject link" url="/postSubjects"/>
                <verifytitle description="we should see the postSubjectList title"
                    text=".*${postSubjectList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the postSubjectList title"
                    text=".*${postSubjectList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit postSubject screen displays without errors -->
    <target name="EditPostSubject" description="Tests editing an existing PostSubject's information">
        <webtest name="editPostSubject">
            &config;
            <steps>
                &login;
                <invoke description="View PostSubject List" url="/postSubjects"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the postSubjectDetail title"
                    text=".*${postSubjectDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a postSubject and then save -->
    <target name="SavePostSubject" description="Tests editing and saving a postSubject">
        <webtest name="savePostSubject">
            &config;
            <steps>
                &login;
                <invoke description="click Edit PostSubject link" url="/postSubjectform?id=-1"/>
                <verifytitle description="we should see the postSubjectDetail title"
                    text=".*${postSubjectDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${postSubjectDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postSubject.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new PostSubject -->
    <target name="AddPostSubject" description="Adds a new PostSubject">
        <webtest name="addPostSubject">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/postSubjectform"/>
                <verifytitle description="we should see the postSubjectDetail title"
                    text=".*${postSubjectDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="PostSubject List appears if save successful"
                    text=".*${postSubjectList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postSubject.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing postSubject -->
    <target name="DeletePostSubject" description="Deletes existing PostSubject">
        <webtest name="deletePostSubject">
            &config;
            <steps>
                &login;
                <invoke description="click Edit PostSubject link" url="/postSubjectform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display PostSubject List" text=".*${postSubjectList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postSubject.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--PostSubject-END-->
    <!--Post-START-->
    <!-- runs post-related tests -->
    <target name="PostTests"
            depends="SearchPosts,EditPost,SavePost,AddPost,DeletePost"
            description="Call and executes all post test cases (targets)">
        <echo>Successfully ran all Post UI tests!</echo>
    </target>

    <!-- Verify the posts list screen displays without errors -->
    <target name="SearchPosts" description="Tests search for and displaying all posts">
        <webtest name="searchPosts">
            &config;
            <steps>
                &login;
                <invoke description="click View Post link" url="/posts"/>
                <verifytitle description="we should see the postList title"
                    text=".*${postList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the postList title"
                    text=".*${postList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit post screen displays without errors -->
    <target name="EditPost" description="Tests editing an existing Post's information">
        <webtest name="editPost">
            &config;
            <steps>
                &login;
                <invoke description="View Post List" url="/posts"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the postDetail title"
                    text=".*${postDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a post and then save -->
    <target name="SavePost" description="Tests editing and saving a post">
        <webtest name="savePost">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Post link" url="/postform?id=-1"/>
                <verifytitle description="we should see the postDetail title"
                    text=".*${postDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${postDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${post.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Post -->
    <target name="AddPost" description="Adds a new Post">
        <webtest name="addPost">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/postform"/>
                <verifytitle description="we should see the postDetail title"
                    text=".*${postDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Post List appears if save successful"
                    text=".*${postList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${post.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing post -->
    <target name="DeletePost" description="Deletes existing Post">
        <webtest name="deletePost">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Post link" url="/postform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Post List" text=".*${postList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${post.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Post-END-->
    <!--PostBar-START-->
    <!-- runs postBar-related tests -->
    <target name="PostBarTests"
            depends="SearchPostBars,EditPostBar,SavePostBar,AddPostBar,DeletePostBar"
            description="Call and executes all postBar test cases (targets)">
        <echo>Successfully ran all PostBar UI tests!</echo>
    </target>

    <!-- Verify the postBars list screen displays without errors -->
    <target name="SearchPostBars" description="Tests search for and displaying all postBars">
        <webtest name="searchPostBars">
            &config;
            <steps>
                &login;
                <invoke description="click View PostBar link" url="/postBars"/>
                <verifytitle description="we should see the postBarList title"
                    text=".*${postBarList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the postBarList title"
                    text=".*${postBarList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit postBar screen displays without errors -->
    <target name="EditPostBar" description="Tests editing an existing PostBar's information">
        <webtest name="editPostBar">
            &config;
            <steps>
                &login;
                <invoke description="View PostBar List" url="/postBars"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the postBarDetail title"
                    text=".*${postBarDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a postBar and then save -->
    <target name="SavePostBar" description="Tests editing and saving a postBar">
        <webtest name="savePostBar">
            &config;
            <steps>
                &login;
                <invoke description="click Edit PostBar link" url="/postBarform?id=-1"/>
                <verifytitle description="we should see the postBarDetail title"
                    text=".*${postBarDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->
                <setCheckbox description="set ifAccessAllReply" name="ifAccessAllReply" value="true"/>

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${postBarDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postBar.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new PostBar -->
    <target name="AddPostBar" description="Adds a new PostBar">
        <webtest name="addPostBar">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/postBarform"/>
                <verifytitle description="we should see the postBarDetail title"
                    text=".*${postBarDetail.title}.*" regex="true"/>

                <!-- enter required fields -->
                <setCheckbox description="set ifAccessAllReply" name="ifAccessAllReply" value="true"/>

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="PostBar List appears if save successful"
                    text=".*${postBarList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postBar.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing postBar -->
    <target name="DeletePostBar" description="Deletes existing PostBar">
        <webtest name="deletePostBar">
            &config;
            <steps>
                &login;
                <invoke description="click Edit PostBar link" url="/postBarform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display PostBar List" text=".*${postBarList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${postBar.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--PostBar-END-->
    <!--Reply-START-->
    <!-- runs reply-related tests -->
    <target name="ReplyTests"
            depends="SearchReplies,EditReply,SaveReply,AddReply,DeleteReply"
            description="Call and executes all reply test cases (targets)">
        <echo>Successfully ran all Reply UI tests!</echo>
    </target>

    <!-- Verify the replies list screen displays without errors -->
    <target name="SearchReplies" description="Tests search for and displaying all replies">
        <webtest name="searchReplies">
            &config;
            <steps>
                &login;
                <invoke description="click View Reply link" url="/replies"/>
                <verifytitle description="we should see the replyList title"
                    text=".*${replyList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the replyList title"
                    text=".*${replyList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit reply screen displays without errors -->
    <target name="EditReply" description="Tests editing an existing Reply's information">
        <webtest name="editReply">
            &config;
            <steps>
                &login;
                <invoke description="View Reply List" url="/replies"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the replyDetail title"
                    text=".*${replyDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a reply and then save -->
    <target name="SaveReply" description="Tests editing and saving a reply">
        <webtest name="saveReply">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Reply link" url="/replyform?id=-1"/>
                <verifytitle description="we should see the replyDetail title"
                    text=".*${replyDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${replyDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${reply.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Reply -->
    <target name="AddReply" description="Adds a new Reply">
        <webtest name="addReply">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/replyform"/>
                <verifytitle description="we should see the replyDetail title"
                    text=".*${replyDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Reply List appears if save successful"
                    text=".*${replyList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${reply.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing reply -->
    <target name="DeleteReply" description="Deletes existing Reply">
        <webtest name="deleteReply">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Reply link" url="/replyform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Reply List" text=".*${replyList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${reply.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Reply-END-->
    <!--Message-START-->
    <!-- runs message-related tests -->
    <target name="MessageTests"
            depends="SearchMessages,EditMessage,SaveMessage,AddMessage,DeleteMessage"
            description="Call and executes all message test cases (targets)">
        <echo>Successfully ran all Message UI tests!</echo>
    </target>

    <!-- Verify the messages list screen displays without errors -->
    <target name="SearchMessages" description="Tests search for and displaying all messages">
        <webtest name="searchMessages">
            &config;
            <steps>
                &login;
                <invoke description="click View Message link" url="/messages"/>
                <verifytitle description="we should see the messageList title"
                    text=".*${messageList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the messageList title"
                    text=".*${messageList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit message screen displays without errors -->
    <target name="EditMessage" description="Tests editing an existing Message's information">
        <webtest name="editMessage">
            &config;
            <steps>
                &login;
                <invoke description="View Message List" url="/messages"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the messageDetail title"
                    text=".*${messageDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a message and then save -->
    <target name="SaveMessage" description="Tests editing and saving a message">
        <webtest name="saveMessage">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Message link" url="/messageform?id=-1"/>
                <verifytitle description="we should see the messageDetail title"
                    text=".*${messageDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->
                <setInputField description="set status" name="status" value="61150973"/>

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${messageDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${message.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Message -->
    <target name="AddMessage" description="Adds a new Message">
        <webtest name="addMessage">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/messageform"/>
                <verifytitle description="we should see the messageDetail title"
                    text=".*${messageDetail.title}.*" regex="true"/>

                <!-- enter required fields -->
                <setInputField description="set status" name="status" value="763204748"/>

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Message List appears if save successful"
                    text=".*${messageList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${message.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing message -->
    <target name="DeleteMessage" description="Deletes existing Message">
        <webtest name="deleteMessage">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Message link" url="/messageform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Message List" text=".*${messageList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${message.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Message-END-->
    
    <!--DocType-START-->
    <!-- runs docType-related tests -->
    <target name="DocTypeTests"
            depends="SearchDocTypes,EditDocType,SaveDocType,AddDocType,DeleteDocType"
            description="Call and executes all docType test cases (targets)">
        <echo>Successfully ran all DocType UI tests!</echo>
    </target>

    <!-- Verify the docTypes list screen displays without errors -->
    <target name="SearchDocTypes" description="Tests search for and displaying all docTypes">
        <webtest name="searchDocTypes">
            &config;
            <steps>
                &login;
                <invoke description="click View DocType link" url="/docTypes"/>
                <verifytitle description="we should see the docTypeList title"
                    text=".*${docTypeList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the docTypeList title"
                    text=".*${docTypeList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit docType screen displays without errors -->
    <target name="EditDocType" description="Tests editing an existing DocType's information">
        <webtest name="editDocType">
            &config;
            <steps>
                &login;
                <invoke description="View DocType List" url="/docTypes"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the docTypeDetail title"
                    text=".*${docTypeDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a docType and then save -->
    <target name="SaveDocType" description="Tests editing and saving a docType">
        <webtest name="saveDocType">
            &config;
            <steps>
                &login;
                <invoke description="click Edit DocType link" url="/docTypeform?id=-1"/>
                <verifytitle description="we should see the docTypeDetail title"
                    text=".*${docTypeDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${docTypeDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${docType.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new DocType -->
    <target name="AddDocType" description="Adds a new DocType">
        <webtest name="addDocType">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/docTypeform"/>
                <verifytitle description="we should see the docTypeDetail title"
                    text=".*${docTypeDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="DocType List appears if save successful"
                    text=".*${docTypeList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${docType.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing docType -->
    <target name="DeleteDocType" description="Deletes existing DocType">
        <webtest name="deleteDocType">
            &config;
            <steps>
                &login;
                <invoke description="click Edit DocType link" url="/docTypeform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display DocType List" text=".*${docTypeList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${docType.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--DocType-END-->
    <!--Documentation-START-->
    <!-- runs documentation-related tests -->
    <target name="DocumentationTests"
            depends="SearchDocumentations,EditDocumentation,SaveDocumentation,AddDocumentation,DeleteDocumentation"
            description="Call and executes all documentation test cases (targets)">
        <echo>Successfully ran all Documentation UI tests!</echo>
    </target>

    <!-- Verify the documentations list screen displays without errors -->
    <target name="SearchDocumentations" description="Tests search for and displaying all documentations">
        <webtest name="searchDocumentations">
            &config;
            <steps>
                &login;
                <invoke description="click View Documentation link" url="/documentations"/>
                <verifytitle description="we should see the documentationList title"
                    text=".*${documentationList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the documentationList title"
                    text=".*${documentationList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit documentation screen displays without errors -->
    <target name="EditDocumentation" description="Tests editing an existing Documentation's information">
        <webtest name="editDocumentation">
            &config;
            <steps>
                &login;
                <invoke description="View Documentation List" url="/documentations"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the documentationDetail title"
                    text=".*${documentationDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a documentation and then save -->
    <target name="SaveDocumentation" description="Tests editing and saving a documentation">
        <webtest name="saveDocumentation">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Documentation link" url="/documentationform?id=-1"/>
                <verifytitle description="we should see the documentationDetail title"
                    text=".*${documentationDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->
                <setInputField description="set docSize" name="docSize" value="1478019255"/>
                <setCheckbox description="set viewLimit" name="viewLimit" value="true"/>

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${documentationDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${documentation.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Documentation -->
    <target name="AddDocumentation" description="Adds a new Documentation">
        <webtest name="addDocumentation">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/documentationform"/>
                <verifytitle description="we should see the documentationDetail title"
                    text=".*${documentationDetail.title}.*" regex="true"/>

                <!-- enter required fields -->
                <setInputField description="set docSize" name="docSize" value="1464968890"/>
                <setCheckbox description="set viewLimit" name="viewLimit" value="true"/>

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Documentation List appears if save successful"
                    text=".*${documentationList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${documentation.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing documentation -->
    <target name="DeleteDocumentation" description="Deletes existing Documentation">
        <webtest name="deleteDocumentation">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Documentation link" url="/documentationform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Documentation List" text=".*${documentationList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${documentation.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Documentation-END-->
    <!--Note-START-->
    <!-- runs note-related tests -->
    <target name="NoteTests"
            depends="SearchNotes,EditNote,SaveNote,AddNote,DeleteNote"
            description="Call and executes all note test cases (targets)">
        <echo>Successfully ran all Note UI tests!</echo>
    </target>

    <!-- Verify the notes list screen displays without errors -->
    <target name="SearchNotes" description="Tests search for and displaying all notes">
        <webtest name="searchNotes">
            &config;
            <steps>
                &login;
                <invoke description="click View Note link" url="/notes"/>
                <verifytitle description="we should see the noteList title"
                    text=".*${noteList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the noteList title"
                    text=".*${noteList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit note screen displays without errors -->
    <target name="EditNote" description="Tests editing an existing Note's information">
        <webtest name="editNote">
            &config;
            <steps>
                &login;
                <invoke description="View Note List" url="/notes"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the noteDetail title"
                    text=".*${noteDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a note and then save -->
    <target name="SaveNote" description="Tests editing and saving a note">
        <webtest name="saveNote">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Note link" url="/noteform?id=-1"/>
                <verifytitle description="we should see the noteDetail title"
                    text=".*${noteDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${noteDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${note.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Note -->
    <target name="AddNote" description="Adds a new Note">
        <webtest name="addNote">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/noteform"/>
                <verifytitle description="we should see the noteDetail title"
                    text=".*${noteDetail.title}.*" regex="true"/>

                <!-- enter required fields -->

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Note List appears if save successful"
                    text=".*${noteList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${note.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing note -->
    <target name="DeleteNote" description="Deletes existing Note">
        <webtest name="deleteNote">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Note link" url="/noteform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Note List" text=".*${noteList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${note.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Note-END-->
    <!--ComponentStyle-START-->
    <!-- runs componentStyle-related tests -->
    <target name="ComponentStyleTests"
            depends="SearchComponentStyles,EditComponentStyle,SaveComponentStyle,AddComponentStyle,DeleteComponentStyle"
            description="Call and executes all componentStyle test cases (targets)">
        <echo>Successfully ran all ComponentStyle UI tests!</echo>
    </target>

    <!-- Verify the componentStyles list screen displays without errors -->
    <target name="SearchComponentStyles" description="Tests search for and displaying all componentStyles">
        <webtest name="searchComponentStyles">
            &config;
            <steps>
                &login;
                <invoke description="click View ComponentStyle link" url="/componentStyles"/>
                <verifytitle description="we should see the componentStyleList title"
                    text=".*${componentStyleList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the componentStyleList title"
                    text=".*${componentStyleList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit componentStyle screen displays without errors -->
    <target name="EditComponentStyle" description="Tests editing an existing ComponentStyle's information">
        <webtest name="editComponentStyle">
            &config;
            <steps>
                &login;
                <invoke description="View ComponentStyle List" url="/componentStyles"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the componentStyleDetail title"
                    text=".*${componentStyleDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a componentStyle and then save -->
    <target name="SaveComponentStyle" description="Tests editing and saving a componentStyle">
        <webtest name="saveComponentStyle">
            &config;
            <steps>
                &login;
                <invoke description="click Edit ComponentStyle link" url="/componentStyleform?id=-1"/>
                <verifytitle description="we should see the componentStyleDetail title"
                    text=".*${componentStyleDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->
                <setInputField description="set processOrder" name="processOrder" value="1548192745"/>

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${componentStyleDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${componentStyle.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new ComponentStyle -->
    <target name="AddComponentStyle" description="Adds a new ComponentStyle">
        <webtest name="addComponentStyle">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/componentStyleform"/>
                <verifytitle description="we should see the componentStyleDetail title"
                    text=".*${componentStyleDetail.title}.*" regex="true"/>

                <!-- enter required fields -->
                <setInputField description="set processOrder" name="processOrder" value="1161430126"/>

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="ComponentStyle List appears if save successful"
                    text=".*${componentStyleList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${componentStyle.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing componentStyle -->
    <target name="DeleteComponentStyle" description="Deletes existing ComponentStyle">
        <webtest name="deleteComponentStyle">
            &config;
            <steps>
                &login;
                <invoke description="click Edit ComponentStyle link" url="/componentStyleform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display ComponentStyle List" text=".*${componentStyleList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${componentStyle.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--ComponentStyle-END-->
    <!--Component-START-->
    <!-- runs component-related tests -->
    <target name="ComponentTests"
            depends="SearchComponents,EditComponent,SaveComponent,AddComponent,DeleteComponent"
            description="Call and executes all component test cases (targets)">
        <echo>Successfully ran all Component UI tests!</echo>
    </target>

    <!-- Verify the components list screen displays without errors -->
    <target name="SearchComponents" description="Tests search for and displaying all components">
        <webtest name="searchComponents">
            &config;
            <steps>
                &login;
                <invoke description="click View Component link" url="/components"/>
                <verifytitle description="we should see the componentList title"
                    text=".*${componentList.title}.*" regex="true"/>
                <setinputfield description="set search term" name="q" value="*"/>
                <clickbutton label="${button.search}" description="Click Search"/>
                <verifytitle description="we should see the componentList title"
                    text=".*${componentList.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Verify the edit component screen displays without errors -->
    <target name="EditComponent" description="Tests editing an existing Component's information">
        <webtest name="editComponent">
            &config;
            <steps>
                &login;
                <invoke description="View Component List" url="/components"/>
                <clicklink label="-1" description="Click edit link"/>
                <verifytitle description="we should see the componentDetail title"
                    text=".*${componentDetail.title}.*" regex="true"/>
            </steps>
        </webtest>
    </target>

    <!-- Edit a component and then save -->
    <target name="SaveComponent" description="Tests editing and saving a component">
        <webtest name="saveComponent">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Component link" url="/componentform?id=-1"/>
                <verifytitle description="we should see the componentDetail title"
                    text=".*${componentDetail.title}.*" regex="true"/>

                <!-- update some of the required fields -->
                <setInputField description="set length" name="length" value="2.2925238E38"/>
                <setInputField description="set price" name="price" value="3.2706325E38"/>
                <setInputField description="set size" name="size" value="1.2970888E38"/>
                <setInputField description="set weight" name="weight" value="1.7057012E38"/>

                <clickbutton label="${button.save}" description="Click Save"/>
                <verifytitle description="Page re-appears if save successful"
                    text=".*${componentDetail.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${component.updated}"/>
            </steps>
        </webtest>
    </target>

    <!-- Add a new Component -->
    <target name="AddComponent" description="Adds a new Component">
        <webtest name="addComponent">
            &config;
            <steps>
                &login;
                <invoke description="click Add Button" url="/componentform"/>
                <verifytitle description="we should see the componentDetail title"
                    text=".*${componentDetail.title}.*" regex="true"/>

                <!-- enter required fields -->
                <setInputField description="set length" name="length" value="1.0658821E37"/>
                <setInputField description="set price" name="price" value="3.0023826E38"/>
                <setInputField description="set size" name="size" value="1.5960363E38"/>
                <setInputField description="set weight" name="weight" value="2.4256918E38"/>

                <clickbutton label="${button.save}" description="Click button 'Save'"/>
                <verifytitle description="Component List appears if save successful"
                    text=".*${componentList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${component.added}"/>
            </steps>
        </webtest>
    </target>

    <!-- Delete existing component -->
    <target name="DeleteComponent" description="Deletes existing Component">
        <webtest name="deleteComponent">
            &config;
            <steps>
                &login;
                <invoke description="click Edit Component link" url="/componentform?id=-1"/>
                <clickbutton label="${button.delete}" description="Click button 'Delete'"/>
                <verifytitle description="display Component List" text=".*${componentList.title}.*" regex="true"/>
                <verifytext description="verify success message" text="${component.deleted}"/>
            </steps>
        </webtest>
    </target>    <!--Component-END-->
</project>
















